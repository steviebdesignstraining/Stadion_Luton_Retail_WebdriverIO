name: Run Android E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Move fsevents to optionalDependencies (CI fix)
        working-directory: ./wdio-appium-project
        run: |
          sudo apt-get install jq -y
          jq 'if .dependencies["fsevents"] then
                .optionalDependencies["fsevents"] = .dependencies["fsevents"] |
                del(.dependencies["fsevents"])
              else . end' package.json > tmp.json
          mv tmp.json package.json

      - name: Install dependencies
        working-directory: ./wdio-appium-project
        run: npm install

      - name: Set up Android Emulator and Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: default
          arch: x86_64
          profile: Nexus 6
          emulator-options: "-no-window -no-audio"
          script: |
            wget https://github.com/steviebdesignstraining/Stadion_Luton_Retail_WebdriverIO/releases/download/v1.0.0/LutonRetail.apk -O ./wdio-appium-project/app.apk
            cd wdio-appium-project

            # Start the emulator
            emulator -avd Nexus_6_API_30 -no-window -no-audio &

            # Wait for the device to be ready
            adb wait-for-device
            adb shell getprop sys.boot_completed

            # Restart ADB if necessary
            adb kill-server
            adb start-server

            # Run the tests after emulator is ready
            npx wdio run wdio.conf.js

      - name: Install Allure commandline
        run: |
          npm install -g allure-commandline --save-dev

      - name: Generate Allure report
        working-directory: ./wdio-appium-project
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: wdio-appium-project/allure-report

      - name: Set up GitHub Pages branch
        run: |
          # Configure git for commit
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Checkout gh-pages branch (if it doesn't exist, create it)
          git checkout -b gh-pages

          # Clean the folder and copy Allure report
          rm -rf *
          cp -r wdio-appium-project/allure-report/* .

          # Commit and push the Allure report to the gh-pages branch
          git add .
          git commit -m "Update Allure Report"
          git push --force origin gh-pages

      - name: GitHub Pages Deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          branch: gh-pages
          folder: ./wdio-appium-project/allure-report
          target_branch: gh-pages
